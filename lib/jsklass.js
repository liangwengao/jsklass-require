"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const isWindow=e=>void 0!==e&&e===e.window,isBrowserSide=()=>"undefined"!=typeof window,isArray=e=>"array"===getType(e),isArrayLike=e=>{let t=!!e&&"length"in e&&e.length,n=getType(e);if("function"===n||isWindow(e))return!1;return"array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e},mergeArray=(e,t)=>{isArray(e)&&(e=e.concat(t));return e},convertArgsToArray=e=>Array.prototype.slice.apply(e),exit=e=>{throw new Error(e)},error=(e,t)=>{isEmpty(e)||isEmpty(t)?console.error(e):console.error(e,t)},warn=(e,t)=>{isEmpty(e)||isEmpty(t)?console.warn(e):console.warn(e,t)},info=(e,t)=>{isEmpty(e)||isEmpty(t)?console.info(e):console.info(e,t)},log=(e,t)=>{isEmpty(e)||isEmpty(t)?console.log(e):console.log(e,t)};var Console=Object.freeze({exit:exit,error:error,warn:warn,info:info,log:log});const isFunction=e=>"function"===getType(e),evil=e=>{try{return new Function("return "+e)()}catch(e){exit(e)}},isObject=e=>"object"===getType(e),inObject=(e,t)=>Object.keys(e).indexOf(t)>-1,mergeObject=(e,t)=>{each(t,(t,n)=>{e[t]=n});return e};var _this=void 0;let class2type={"[object Boolean]":"boolean","[object Number]":"number","[object String]":"string","[object Function]":"function","[object Array]":"array","[object Date]":"date","[object RegExp]":"regexp","[object Object]":"object","[object Error]":"error","[object Symbol]":"symbol"},sToString=class2type.toString,sHasOwn=class2type.hasOwnProperty,oProto=Object.getPrototypeOf,sFnToString=sHasOwn.toString,sObjectFunctionString=sFnToString.call(Object);const recursionGetAttr=(e,t)=>{try{if(t=t||[],!e||!t||t.length<=0)return e;let n=t.shift(),r=e[n];return t.length>0?recursionGetAttr(r,t):r}catch(e){return""}},getType=e=>{if(null===e)return e+"";return"object"==typeof e||"function"==typeof e?class2type[sToString.call(e)]||"object":typeof e},isEmpty=e=>{if(void 0===e||null===e||""===e||void 0===e)return!0;if(isArray(e)||isObject(e)){let t=0;for(let n in e)t++;if(t<=0)return!0}return!1},getDefaultVal=(e,t,n)=>{n=n||"";e=isObject(e)?e:{};if(isEmpty(t)||isObject(t))return n;let r=t.split(".");let a=recursionGetAttr(e,r);if(isEmpty(a))return n;return a},each=(e,t)=>{let n,r=0;if(isArrayLike(e))for(n=e.length;r<n&&!1!==t.call(e[r],r,e[r]);r++);else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},reverseEach=(e,t)=>{let n;if(isArrayLike(e))for(let r=(n=e.length)-1;r>=0&&!1!==t.call(e[r],r,e[r]);r--);else{let n=[];each(e,function(e,t){n.push(e)}),n.sort(function(e,t){return t-e});let r=function(t){let n={};return each(e,function(e,r){if(e.toString()===t.toString())return n=r,!1}),n};each(n,function(e,n){if(!1===t.call(r(n),n,r(n)))return!1})}return e},seal=e=>{try{return Object.seal(e)}catch(t){return e}},freeze=e=>{try{return Object.freeze(e)}catch(t){return e}},preventExtension=e=>{try{return Object.preventExtensions(e)}catch(t){return e}},isPlainObject=function(e){let t,n;return!(!e||"[object Object]"!==sToString.call(e))&&(!(t=oProto(e))||"function"==typeof(n=sHasOwn.call(t,"constructor")&&t.constructor)&&sFnToString.call(n)===sObjectFunctionString)},extend=e=>{let t,n,r,a,o,i,c=e&&e[0]||{},u=1,s=e.length,l=!1;"boolean"==typeof c&&(l=c,c=e[u]||{},u++);isObject(c)||isFunction(c)||(c={});u===s&&(c=_this,u--);for(;u<s;u++)if(null!==(t=e[u]))for(n in t)r=c[n],c!==(a=t[n])&&(l&&a&&(isPlainObject(a)||(o=isArray(a)))?(o?(o=!1,i=r&&isArray(r)?r:[]):i=r&&isPlainObject(r)?r:{},c[n]=extend([l,i,a])):void 0!==a&&(c[n]=a));return c},isString=e=>"string"===getType(e),initialsToUpperCase=e=>{let t=e.toLowerCase().split(" ");for(let e=0;e<t.length;e++)t[e]=t[e][0].toUpperCase()+t[e].substring(1,t[e].length);return t.join(" ")},isJson=e=>{try{if(isObject(e)){let t=JSON.stringify(e);return!(!isString(t)||!t)}}catch(e){return!1}},isJsonStr=e=>{try{if(isString(e)){let t=JSON.parse(e);return!(!isObject(t)||!t)}}catch(e){return!1}},parseJson=e=>{let t={};try{t=isJsonStr(e)?JSON.parse(e):e}catch(e){}return t},stringify=e=>{if(isJson(e))return JSON.stringify(e);return e},isNumber=e=>"number"===getType(e),sHexDigits="0123456789abcdef",oClassIdLength=24,oProtocolIdLength=24,oInstanceIdLength=32,sRunEnvIdLength=12,sRunEnvNameLength=8,sRemakeInstanceTagLength=8;let oClassIds=[],oProtocolIds=[],oInstanceIds=[],sRunEnvId="",sRunEnvName="",sRemakeInstanceTag="";const generateClassId=function(){let e=["0x"],t="",n=Math.max(Math.ceil(8),e.length),r=Math.min(2*n,24);for(let t=0;t<24;t++)e.push(sHexDigits.substr(Math.floor(16*Math.random()),1));return e[n]=sHexDigits.substr(Math.ceil(Math.random()*sHexDigits.length),1),e[r]=sHexDigits.substr(3&e[r]|8,1),t=e.join(""),oClassIds.indexOf(t)>-1?generateClassId():(oClassIds.push(t),t)},hasClassId=function(e){return oClassIds.indexOf(e)>-1},generateProtocolId=function(){let e=["0x"],t="",n=Math.max(Math.ceil(8),e.length),r=Math.min(2*n,24);for(let t=0;t<24;t++)e.push(sHexDigits.substr(Math.floor(16*Math.random()),1));return e[n]=sHexDigits.substr(Math.ceil(Math.random()*sHexDigits.length),1),e[r]=sHexDigits.substr(3&e[r]|8,1),t=e.join(""),oProtocolIds.indexOf(t)>-1?generateProtocolId():(oProtocolIds.push(t),t)},hasProtocolId=function(e){return oProtocolIds.indexOf(e)>-1},generateInstanceId=function(){let e=["0x"],t="",n=Math.max(Math.ceil(32/3),e.length),r=Math.min(2*n,32);for(let t=0;t<32;t++)e.push(sHexDigits.substr(Math.floor(16*Math.random()),1));return e[n]=sHexDigits.substr(Math.ceil(Math.random()*sHexDigits.length),1),e[r]=sHexDigits.substr(3&e[r]|8,1),t=e.join(""),oInstanceIds.indexOf(t)>-1?generateInstanceId():(oInstanceIds.push(t),t)},hasInstanceId=function(e){return oInstanceIds.indexOf(e)>-1},getRunEnvId=function(){if(isEmpty(sRunEnvId)){let e=["0x"];for(let t=0;t<12;t++)e.push(sHexDigits.substr(Math.floor(16*Math.random()),1));sRunEnvId=e.join("")}return sRunEnvId},getRunEnvName=function(){if(isEmpty(sRunEnvName)){let e=["_0x"];for(let t=0;t<8;t++)e.push(sHexDigits.substr(Math.floor(16*Math.random()),1));sRunEnvName=e.join("")}return sRunEnvName},getRemakeInstanceTag=function(){if(isEmpty(sRemakeInstanceTag)){let e=["_0x"];for(let t=0;t<8;t++)e.push(sHexDigits.substr(Math.floor(16*Math.random()),1));sRemakeInstanceTag=e.join("")}return sRemakeInstanceTag},convertCode=e=>getRunEnvId()+"@"+e,formatCode=e=>{e=isArray(e)?e:[];return e.join("@")},checkClassLegal=(e,t,n)=>!isEmpty(e)&&convertCode(n)===t,classOfInstance=e=>t=>{let n=[],r="",a="",o="",i="",c=[],u="";if(isEmpty(t.id)||!hasInstanceId(t.id)||!hasRunEnvGetter(t)||isEmpty(getDataWithRunEnv(t,"key")))return!1;try{hasRunEnvGetter(t)&&(r=getDataWithRunEnv(t,"key"),o=getDataWithRunEnv(t,"name")),hasRunEnvGetter(e)&&(a=getDataWithRunEnv(e,"id"),i=getDataWithRunEnv(e,"name"),c=getDataWithRunEnv(e,"super_name")),n.push({id:a,name:i}),isArray(c)&&(n=mergeArray(n,c))}catch(e){}each(n,(e,t)=>{const n=getDefaultVal(t,"id"),a=getDefaultVal(t,"name");let o=convertCode(n);if(o===r)return u=a,!1});return u===o},instanceOfClass=e=>t=>{let n=[],r="",a="",o="",i="",c=[],u="";if(isEmpty(t.id)||!hasClassId(t.id)||!hasRunEnvGetter(t)||isEmpty(getDataWithRunEnv(t,"key")))return!1;try{hasRunEnvGetter(t)&&(r=getDataWithRunEnv(t,"key"),o=getDataWithRunEnv(t,"name")),hasRunEnvGetter(e)&&(a=getDataWithRunEnv(e,"id"),i=getDataWithRunEnv(e,"name"),c=getDataWithRunEnv(e,"super_name")),n.push({id:a,name:i}),isArray(c)&&(n=mergeArray(n,c))}catch(e){}each(n,(e,t)=>{const n=getDefaultVal(t,"id"),a=getDefaultVal(t,"name");let o=convertCode(n);if(o===r)return u=a,!1});return u===o},classOfExtend=e=>t=>{let n=[],r="",a="",o="",i="",c=[],u="";if(isEmpty(t.id)||!hasClassId(t.id)||!hasRunEnvGetter(t)||isEmpty(getDataWithRunEnv(t,"key")))return!1;try{hasRunEnvGetter(t)&&(r=getDataWithRunEnv(t,"key"),o=getDataWithRunEnv(t,"name")),hasRunEnvGetter(e)&&(a=getDataWithRunEnv(e,"id"),i=getDataWithRunEnv(e,"name"),c=getDataWithRunEnv(e,"super_name")),n.push({id:a,name:i}),isArray(c)&&(n=mergeArray(n,c))}catch(e){}each(n,(e,t)=>{const n=getDefaultVal(t,"id"),a=getDefaultVal(t,"name");let o=convertCode(n);if(o===r)return u=a,!1});return u===o},classOfProtocol=e=>t=>{let n=[],r="",a="",o="";if(isEmpty(t.id)||!hasProtocolId(t.id)||!hasRunEnvGetter(t)||isEmpty(getDataWithRunEnv(t,"key")))return!1;try{hasRunEnvGetter(t)&&(r=getDataWithRunEnv(t,"key"),a=getDataWithRunEnv(t,"name")),hasRunEnvGetter(e)&&(n=getDataWithRunEnv(e,"protocol_name"))}catch(e){}each(n,(e,t)=>{const n=getDefaultVal(t,"id"),a=getDefaultVal(t,"name");let i=convertCode(n);if(i===r)return o=a,!1});return o===a},instanceOfProtocol=e=>t=>{let n=[],r="",a="",o="";if(isEmpty(t.id)||!hasProtocolId(t.id)||!hasRunEnvGetter(t)||isEmpty(getDataWithRunEnv(t,"key")))return!1;try{hasRunEnvGetter(t)&&(r=getDataWithRunEnv(t,"key"),a=getDataWithRunEnv(t,"name")),hasRunEnvGetter(e)&&(n=getDataWithRunEnv(e,"protocol_name"))}catch(e){}each(n,(e,t)=>{const n=getDefaultVal(t,"id"),a=getDefaultVal(t,"name");let i=convertCode(n);if(i===r)return o=a,!1});return o===a},extendOfProtocol=e=>t=>{let n=[],r="",a="",o="";if(isEmpty(t.id)||!hasProtocolId(t.id)||!hasRunEnvGetter(t)||isEmpty(getDataWithRunEnv(t,"key")))return!1;try{hasRunEnvGetter(t)&&(r=getDataWithRunEnv(t,"key"),a=getDataWithRunEnv(t,"name")),hasRunEnvGetter(e)&&(n=getDataWithRunEnv(e,"protocol_name"))}catch(e){}each(n,(e,t)=>{const n=getDefaultVal(t,"id"),a=getDefaultVal(t,"name");let i=convertCode(n);if(i===r)return o=a,!1});return o===a},protocolOfInstance=e=>t=>{let n=[],r="",a="",o="";if(isEmpty(t.id)||!hasInstanceId(t.id)||!hasRunEnvGetter(t)||isEmpty(getDataWithRunEnv(t,"key")))return!1;try{hasRunEnvGetter(t)&&(n=getDataWithRunEnv(t,"protocol_name")),hasRunEnvGetter(e)&&(r=getDataWithRunEnv(e,"key"),a=getDataWithRunEnv(e,"name"))}catch(e){}each(n,(e,t)=>{const n=getDefaultVal(t,"id"),a=getDefaultVal(t,"name");let i=convertCode(n);if(i===r)return o=a,!1});return o===a},__get__=e=>(t,n)=>{let r=null;t===getRunEnvId()&&(r=e[n]?e[n]:null);return r},setStatic=e=>(t,n)=>{e[t]=n},getStatic=e=>(t,n)=>{if(isEmpty(t))return freeze(extend([!0,{},e]));return e[t]?e[t]:n},getConst=e=>(t,n)=>{if(isEmpty(t))return freeze(extend([!0,{},e]));return e[t]?e[t]:n},getDataWithRunEnv=(e,t)=>{let n={};try{if(hasRunEnvGetter(e)){const r=e[getRunEnvName()];n=r(getRunEnvId(),t)}}catch(e){}return n},hasRunEnvGetter=e=>{let t=!1;try{const n=e[getRunEnvName()];t=isFunction(n)}catch(e){}return t},toClassString=(e,t)=>(function(){return t+"@@"+e}),remakeInstance=e=>(function(){let t=Object.create(e.prototype),n=convertArgsToArray(arguments);return n.push(getRemakeInstanceTag()),e.apply(t,n),t}),makeInstance=e=>(function(){let t=Object.create(e.prototype);return e.apply(t,Array.prototype.slice.apply(arguments)),t}),toProtocolString=(e,t)=>()=>t+"@@"+e,toInstanceString=(e,t,n)=>()=>e+"@@"+n+"@@"+t,toInstanceJson=()=>(function(){let e="";try{hasRunEnvGetter(this)&&(e=getDataWithRunEnv(this,"name"))}catch(e){}return isFunction(this._encoder)||exit(`<${e}> 类请实现 sl._encoder=[function]`),this._encoder()}),formatGetterName=e=>{if(isEmpty(e))return e;return"_get"+initialsToUpperCase(e)},formatSetterName=e=>{if(isEmpty(e))return e;return"_set"+initialsToUpperCase(e)},formatSyntax=e=>e.replace(/[\s+]/g,"").replace(/\{(.*)\}/g,"{}"),formatEsSyntax=e=>e.replace(/function\(/g,"(").replace(/\)/g,")=>"),parseTypeRule=e=>{let t="",n=!1;switch(e.type){case"function":n=!0,t="function("+e.args.join(",")+"){}";break;case"object":n=!0,t="[object]";break;case"array":n=!0,t="[array]";break;case"string":n=!0,t="[string]";break;case"number":n=!0,t="[number]";break;case"class":n=!0,t=e.args;break;default:n=!0,t="[*]"}"@optional"===e.mode&&(n=!1);return{type:e.type,check:n,value:t}},formatSyntaxWidthPlatform=function(e){return isBrowserSide()?e:formatSyntax(e)},validateTypeRule=(e,t,n)=>{let r=getDefaultVal(n,"type"),a=getDefaultVal(n,"check"),o=getDefaultVal(n,"value"),i=o.replace(/[\s+]/g,"");if(!e.hasOwnProperty(t))return t+(i?"="+i:"");let c=e[t],u=c.toString(),s=getType(c);if(a&&void 0!==c&&null!==c)switch(r){case"function":if("function"!==s)return t+(i?"="+i:"");if(formatSyntax(o)!==formatSyntax(u)||formatEsSyntax(formatSyntax(o))!==formatEsSyntax(formatSyntax(u)))return t+(i?"="+i:"");break;case"object":if("object"!==s)return t+(i?"="+i:"");break;case"array":if("array"!==s)return t+(i?"="+i:"");break;case"string":if("string"!==s)return t+(i?"="+i:"");break;case"number":if("number"!==s)return t+(i?"="+i:"");break;case"class":let e="",n="",a="",l="";try{hasRunEnvGetter(c)&&(e=getDataWithRunEnv(c,"key"),n=getDataWithRunEnv(c,"id"),l=getDataWithRunEnv(c,"name")),a=c.id}catch(e){}if(!hasInstanceId(a)||!hasClassId(n)||!checkClassLegal(l,e,n)||formatCode([l,n])!==o)return t+(i?"="+i:"")}return null},prototype=(e,t)=>{const n="function (resolve){resolve.method = function _"+e+"_(value) {if(resolve.callback) return (resolve.callback).apply(this, [value]);};}";try{let e={method:function(e){},callback:t};return evil(n)(e),e.method}catch(e){exit(e)}},getProtocolTypeRuleValueConfig=function(e,t,n,r,a){let o=getDefaultVal(n,"type"),i=getDefaultVal(n,"value");return{configurable:!1,enumerable:!0,get:prototype(o,function(){const n=this[formatGetterName(e)];return a&&isFunction(n)?n(t):t}),set:prototype(o,function(n){const c=this[formatSetterName(e)];let u=!0,s=getType(n);if(a&&isFunction(c)){if(n=c(n),isEmpty(n))return!1;s=getType(n)}switch(o){case"function":u=isFunction(n);break;case"object":u=isObject(n);break;case"array":u=isArray(n);break;case"string":u=isString(n);break;case"number":u=isNumber(n);break;case"class":let e="",t="",r="",a="";try{hasRunEnvGetter(n)&&(e=getDataWithRunEnv(n,"key"),t=getDataWithRunEnv(n,"id"),a=getDataWithRunEnv(n,"name")),r=n.id}catch(e){}(u=hasInstanceId(r)&&hasClassId(t)&&checkClassLegal(a,e,t)&&formatCode([a,t])===i)||(s=formatCode([a,t]),o=i)}return u||void 0===n||null===n?(t=n,!0):(exit(`${r}.${e}=[${s}] 与协议中定义的值类型必须是一致: ${r}.${e}=[${o}]"`),!1)})}},getProtocolTypeRuleValueConfig2=function(e,t,n,r,a){let o=getDefaultVal(n,"type"),i=getDefaultVal(n,"value");return{configurable:!1,enumerable:!0,get:prototype(o,function(){const n=this[formatGetterName(t)];return a&&isFunction(n)?n(e[t]):e[t]}),set:prototype(o,function(n){const c=this[formatSetterName(t)];let u=!0,s=getType(n);if(a&&isFunction(c)){if(n=c(n),isEmpty(n))return!1;s=getType(n)}switch(o){case"function":u=isFunction(n);break;case"object":u=isObject(n);break;case"array":u=isArray(n);break;case"string":u=isString(n);break;case"number":u=isNumber(n);break;case"class":let e="",t="",r="",a="";try{hasRunEnvGetter(n)&&(e=getDataWithRunEnv(n,"key"),t=getDataWithRunEnv(n,"id"),a=getDataWithRunEnv(n,"name")),r=n.id}catch(e){}(u=hasInstanceId(r)&&hasClassId(t)&&checkClassLegal(a,e,t)&&formatCode([a,t])===i)||(s=formatCode([a,t]),o=i)}return u||void 0===n||null===n?(e[t]=n,!0):(exit(`${r}.${t}=[${s}] 与协议中定义的值类型必须是一致: ${r}.${t}=[${o}]"`),!1)})}},setProtocolTypeRuleValue=function(e,t,n,r,a){Object.defineProperty(e,t,getProtocolTypeRuleValueConfig(t,n,r,a,!1))},getProtocolTypeRuleOfSetterAndGetterValue=function(e,t,n,r){return getProtocolTypeRuleValueConfig2(e,t,n,r,!0)},setProtocolTypeRuleOfSetterAndGetterValue=function(e,t,n,r,a,o){let i=isEmpty(n[t])?r:n;Object.defineProperty(e,t,getProtocolTypeRuleValueConfig2(i,t,a,o,!0))},getGetterAndSetterValueConfig=function(e,t){return{configurable:!1,enumerable:!0,get:prototype(getType(e[t]),function(){const n=this[formatGetterName(t)];return isFunction(n)?n(e[t]):e[t]}),set:prototype(getType(e[t]),function(n){const r=this[formatSetterName(t)];return(!isFunction(r)||(n=r(n),!isEmpty(n)))&&(e[t]=n,!0)})}},setGetterAndSetterValue=function(e,t,n,r){let a=isEmpty(n[t])?r:n;Object.defineProperty(e,t,getGetterAndSetterValueConfig(a,t))},getFinalGetterAndSetterValueConfig=function(e,t,n){return{configurable:!1,enumerable:!0,get:prototype(getType(t),function(){return t}),set:prototype(getType(t),function(){exit(`不可覆写[Final]类型的属性成员：${n}.${e}`)})}},setFinalGetterAndSetterValue=function(e,t,n,r){Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:prototype(getType(n),function(){return n}),set:prototype(getType(n),function(){exit(`不可覆写[Final]类型的属性成员：${r}.${t}`)})})},ImplementProtocol=function(e,t,n,r,a,o,i,c){const u=getDefaultVal(t,"self",{}),s=getDefaultVal(t,"const",{}),l=getDefaultVal(t,"static",{});let f=!1,p=null,g=null,y=null;return each(u,function(e,t){let i=parseTypeRule(t);if(i.check&&(p=isEmpty(n[e])?isEmpty(a[e])?isEmpty(r[e])?isEmpty(o[e])?validateTypeRule(n,e,i):validateTypeRule(o,e,i):validateTypeRule(r,e,i):validateTypeRule(a,e,i):validateTypeRule(n,e,i)))return f=!0,!1}),!f&&each(s,function(e,t){let n=parseTypeRule(t);if(n.check&&(y=validateTypeRule(i,e,n)))return f=!0,!1}),!f&&each(l,function(e,t){let n=parseTypeRule(t);if(n.check){if(g=validateTypeRule(c,e,n))return f=!0,!1;setProtocolTypeRuleValue(c,e,n,"static")}}),p&&exit(`<${e}> 类必须实现协议: self.${formatSyntaxWidthPlatform(p)}`),y&&exit(`<${e}> 类必须实现协议: const.${formatSyntaxWidthPlatform(y)}`),g&&exit(`<${e}> 类必须实现协议: static.${formatSyntaxWidthPlatform(g)}`),!f},validateClass=(e,t,n,r)=>{const a=/^[A-Z][A-Za-z0-9_]+$/g,o="function(?,?){}";e||exit(`没有给定类名`);isString(e)||exit(`<${e}> 类名称必须是[String]类型`);a.test(e)||exit(`<${e}> 类命名称定义不规范,必须是以大写字母开头`);t||exit(`<${e}> 没有定义类结构体`);isFunction(t)||exit(`<${e}> 类结构体必须是[Function]类型`);const i=t.toString().replace(/[\s+]/g,"").replace(/\{(.*)+\}$/g,"{}").replace(/\((.*)\)/g,"(?,?)");o!==i&&exit(`<${e}> 类结构体定义不规范,格式必须是: ${o}`);n&&(isFunction(n)||exit(`<${e}> 类继承的结构体必须是[Function]类型`),(isEmpty(n.name)||isEmpty(n.id)||!hasClassId(n.id)||!hasRunEnvGetter(n)||isEmpty(getDataWithRunEnv(n,"key")))&&exit(`<${e}> 类继承的结构体不规范`),isFunction(n)||exit(`<${e}> 类继承的结构体不规范,格式必须是: ${o}`));r&&(r=isArray(r)?r:[r],each(r,function(t,n){isFunction(n)||exit(`<${e}> 协议的结构体必须是[function]类型`),(isEmpty(n.name)||isEmpty(n.id)||!hasProtocolId(n.id)||!hasRunEnvGetter(n)||isEmpty(getDataWithRunEnv(n,"key")))&&exit(`<${e}> 协议的结构体不规范`),isFunction(n)||exit(`<${e}> 协议的结构体不规范,格式必须是: ${o}`)}));return!0},KeyWord=["class_name","protocol_name","super_name","prototype","constructor","id",getRunEnvName(),"setStatic","getStatic","getConst","instanceOf","extendOf","classOf","protocolOf","apply","bind","call","caller","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","valueOf","__proto__","$class_name","$super_name","$protocol_name","$prototype","$constructor","$id","$"+getRunEnvName(),"$setStatic","$getStatic","$getConst","$instanceOf","$extendOf","$classOf","$protocolOf","$apply","$bind","$call","$caller","$hasOwnProperty","$isPrototypeOf","$propertyIsEnumerable","$toLocaleString","$valueOf","$__proto__"],KeyWord2=["class_name","protocol_name","super_name","prototype","constructor","id",getRunEnvName(),"setStatic","getStatic","getConst","instanceOf","extendOf","classOf","protocolOf","apply","bind","call","caller","toSource","toString","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","valueOf","__proto__","$class_name","$super_name","$protocol_name","$prototype","$constructor","$id","$"+getRunEnvName(),"$setStatic","$getStatic","$getConst","$instanceOf","$extendOf","$classOf","$protocolOf","$apply","$bind","$call","$caller","$toSource","$toString","$hasOwnProperty","$isPrototypeOf","$propertyIsEnumerable","$toLocaleString","$valueOf","$__proto__"],validateRule=(e,t)=>{const n=/^[a-zA-Z0-9_$]+$/i;let r=[],a=[],o=[],i="",c="prototype",u=!1,s=!1,l=!1,f=!1,p=!1;let g=t.self,y=t.prototype,m=t.static,h=t.const;each(y,function(e,t){if("_construct"===e)return i=e,c="prototype",s=!0,!1;if("$_construct"===e)return i=e,c="prototype",u=!0,!1;if(KeyWord.indexOf(e)>-1)return i=e,c="prototype",l=!0,!1;if(hasFinalName(e)){let t=filterFinalName(e);if(r.indexOf(t)>-1)return i=t,c="prototype",p=!0,!1;r.push(t)}else if(r.indexOf(e)>-1)return i=e,c="prototype",p=!0,!1});p||l||u||s||each(g,function(e,t){if("$_construct"===e)return i=e,c="self",u=!0,!1;if(KeyWord.indexOf(e)>-1)return i=e,c="self",l=!0,!1;if(hasFinalName(e)){let t=filterFinalName(e);if(r.indexOf(t)>-1)return i=t,c="self",p=!0,!1;r.push(t)}else if(r.indexOf(e)>-1)return i=e,c="self",p=!0,!1});p||l||u||s||each(h,function(e,t){return n.test(e)?KeyWord2.indexOf(e)>-1?(i=e,c="const",l=!0,!1):a.indexOf(e)>-1?(i=e,c="const",p=!0,!1):void 0:(i=e,c="const",f=!0,!1)});p||l||u||s||f||each(m,function(e,t){return KeyWord2.indexOf(e)>-1?(i=e,c="static",l=!0,!1):o.indexOf(e)>-1?(i=e,c="static",p=!0,!1):void 0});if(s)return exit(`${e} 类中的 [${c}] 成员名称不允许是：${i}`),!1;if(l)return exit(`${e} 类中的 [${c}] 成员名称不可是关键词：${i}`),!1;if(p)return exit(`${e} 类中的 [${c}]: ${i} 是final类型不可覆写`),!1;if(u)return exit(`${e} 类中的 [${c}]: ${i} 构造函数不允许设置为final类型！`),!1;if(f)return exit(`${e} 类中的 [${c}]: ${i} 名称必须[a-zA-Z0-9_$]方式命名`),!1;return!0},hasFinalName=e=>{return"_construct"!==e&&0===e.indexOf("$")},filterFinalName=e=>{e="_construct"!==e&&0===e.indexOf("$")?e.replace("$",""):e;return e},VHClass=function(e,t,n){let r={0:{_construct:function(){},_encoder:function(){return{}},_decoder:function(){}}},a=0,o=!1,i=convertArgsToArray(n).filter(function(e,t){return!(!isEmpty(e)&&getRemakeInstanceTag()===e.toString())||(o=!0,!1)}),c={},u={},s={},l=getDefaultVal(e,"constructor_list",[]),f=getDefaultVal(e,"name"),p=generateInstanceId(),g=getDefaultVal(e,"id"),y={},m=getDefaultVal(e.vh_data,"protocol.self",{}),h=["_encoder","toString"],d=["_decoder","_construct"],b=[],v={};reverseEach(l,function(n,o){let i=r[a++],c={},s={},l=getDefaultVal(o,"constructor",{}),f=getDefaultVal(o,"self",{}),p=getDefaultVal(o,"prototype",{}),g=getDefaultVal(o,"top_prototype",{});isFunction(l)&&l.apply(t,[t,seal(e.const),e.static,preventExtension(i),u]),!isEmpty(v)&&isEmpty(g)||(v=g),each(f,function(e,n){const r=filterFinalName(e);if(t.propertyIsEnumerable(e)&&d.indexOf(r)<0){if(b.indexOf(r)>-1)return exit(`不可覆写[Final]类型的属性成员：self.${r}`),!1;hasFinalName(e)&&(setFinalGetterAndSetterValue(t,r,t[e],"self"),delete t[e],b.push(r))}isFunction(t[r])?t.propertyIsEnumerable(r)&&(h.indexOf(r)>-1?Object.defineProperty(c,r,{value:t[r],writable:!1,enumerable:!0,configurable:!1}):hasFinalName(e)&&d.indexOf(r)<0?c[r]={value:t[e],writable:!1,enumerable:!0,configurable:!1}:c[r]=t[r]):Object.defineProperty(c,r,{configurable:!0,enumerable:!0,get:function(){return t[r]},set:function(e){t[r]=e}})}),each(p,function(e,n){if("_construct"!==e){const n=filterFinalName(e);if(b.indexOf(n)>-1)return exit(`不可覆写[Final]类型的属性成员：prototype.${n}`),!1;if(h.indexOf(n)>-1)Object.defineProperty(s,e,{value:isEmpty(t[e])?u[e]:t[e],writable:!1,enumerable:!0,configurable:!1});else if(hasFinalName(e)&&d.indexOf(n)<0)setFinalGetterAndSetterValue(s,n,isEmpty(t[e])?u[e]:t[e],"prototype"),b.push(n);else if(inObject(m,e)){let n=parseTypeRule(getDefaultVal(m,e,{}));setProtocolTypeRuleOfSetterAndGetterValue(s,e,t,u,n,"prototype")}else setGetterAndSetterValue(s,n,t,u)}}),s.__proto__=g,c.__proto__=s,r[a]=c}),each(u,function(e,t){const n=filterFinalName(e);if(h.indexOf(n)>-1)s[e]={value:t,writable:!1,enumerable:!0,configurable:!1};else if(hasFinalName(e)&&d.indexOf(n)<0)s[n]=getFinalGetterAndSetterValueConfig(n,t,"prototype");else if(inObject(m,e)){let t=parseTypeRule(getDefaultVal(m,e,{}));s[n]=getProtocolTypeRuleOfSetterAndGetterValue(u,e,t,"prototype")}else s[e]=getGetterAndSetterValueConfig(u,e)}),(c={id:{value:p,writable:!1,enumerable:!1,configurable:!1},setStatic:{value:setStatic(e.static),writable:!1,enumerable:!1,configurable:!1},getStatic:{value:getStatic(e.static),writable:!1,enumerable:!1,configurable:!1},getConst:{value:getConst(e.const),writable:!1,enumerable:!1,configurable:!1},toString:{value:toInstanceString(p,g,f),writable:!0,enumerable:!1,configurable:!0},toJSON:{value:toInstanceJson(),writable:!1,enumerable:!1,configurable:!1},name:{value:f,writable:!1,enumerable:!1,configurable:!1},class_name:{value:f,writable:!1,enumerable:!1,configurable:!1},classOf:{value:instanceOfClass(t),writable:!1,enumerable:!1,configurable:!1},protocolOf:{value:instanceOfProtocol(t),writable:!1,enumerable:!1,configurable:!1},kindInstance:{value:!0,writable:!1,enumerable:!1,configurable:!1}})[getRunEnvName()]={value:__get__(e.vh_data),writable:!1,enumerable:!1,configurable:!1},Object.defineProperties(y,c),y.__proto__=v,t.__proto__=Object.freeze(Object.create(y,s)),each(m,function(e,n){const r=filterFinalName(e);if(b.indexOf(r)<0&&t.propertyIsEnumerable(e)&&d.indexOf(r)<0)if(hasFinalName(e)){let n=parseTypeRule(getDefaultVal(m,e,{}));setProtocolTypeRuleValue(t,r,t[e],n,"self"),delete t[e]}else{let n=parseTypeRule(getDefaultVal(m,e,{}));setProtocolTypeRuleValue(t,r,t[r],n,"self")}}),o?(isFunction(t._decoder)||exit(`<${f}> 类请实现 sl._encoder=[function]`),i.length>0&&(i[0]=parseJson(stringify(i[0]))),t._decoder.apply(t,i)):t._construct&&t._construct.apply(t,i),t._decoder&&delete t._decoder,t._construct&&delete t._construct,each(r,function(e,t){t._decoder&&delete t._decoder,t._construct&&delete t._construct,freeze(t)}),b=[]},VHProtocol=function(e,t){},Class=function(e,t,n,r,a){let o,i={name:e,id:"",key:"",super_name:[],protocol_name:[],constructor:t,constructor_list:[],self:{},prototype:{},super_self:{},super_prototype:{},const:{},static:{},protocol:{}},c=function(){},u=isFunction(a)?new a:new function(){},s=generateClassId(),l={},f={},p={},g={},y={},m={},h={},d=[],b=[],v={},E=[{constructor:t,top_prototype:u,self:l,prototype:f,const:y,static:h}];if(!validateClass(e,t,n,r))return!1;if(!isEmpty(n)){const e=getDataWithRunEnv(n,"constructor_list"),t=getDataWithRunEnv(n,"self"),r=getDataWithRunEnv(n,"super_self"),a=getDataWithRunEnv(n,"prototype"),o=getDataWithRunEnv(n,"super_prototype"),i=getDataWithRunEnv(n,"const"),c=getDataWithRunEnv(n,"static"),u=getDataWithRunEnv(n,"name"),s=getDataWithRunEnv(n,"id"),l=getDataWithRunEnv(n,"super_name"),f=getDataWithRunEnv(n,"protocol_name"),m=getDataWithRunEnv(n,"protocol");each(e,function(e,t){E.push(t)}),each(r,function(e,t){p[e]=t}),each(o,function(e,t){g[e]=t}),each(i,function(e,t){y[e]=t}),each(c,function(e,t){h[e]=t}),each(l,function(e,t){d.push(t)}),each(f,function(e,t){b.push(t)}),each(m,function(e,t){v[e]=t}),each(t,function(e,t){!p[e]&&(p[e]=t)}),each(a,function(e,t){!g[e]&&(g[e]=t)}),d.unshift({id:s,name:u})}if(isEmpty(r)||(r=isArray(r)?r:[r],each(r,function(e,t){each(getDataWithRunEnv(t,"implement_list"),function(e,t){isEmpty(v[e])&&(v[e]={}),v[e]=mergeObject(v[e],t)}),b.push({id:getDataWithRunEnv(t,"id"),name:getDataWithRunEnv(t,"name")})})),t(l,y,h,Object.freeze({}),f),!validateRule(e,{self:l,const:y,static:h,prototype:f}))return!1;if(!ImplementProtocol(e,v,l,p,f,g,y,h))return!1;i.constructor_list=E,i.self=l,i.super_self=p,i.prototype=f,i.super_prototype=g,i.const=y,i.static=h,i.name=e,i.id=s,i.key=convertCode(s),i.super_name=d,i.protocol_name=b,i.protocol=v;let R={constructor_list:E,prototype:f,self:l,const:y,static:h,name:e,id:s,super_name:d,vh_data:i,klass:function(){},_:{_:VHClass},console:Console},_="function (GV, _){GV.klass = function "+e+"() {_._._(GV, this, arguments);};}";try{evil(_)(R,R),c=R.klass}catch(e){exit(e)}return each(y,function(e,t){m[e]={value:t,writable:!1,enumerable:!1,configurable:!1}}),o={constructor:{value:t,writable:!1,enumerable:!1,configurable:!1},name:{value:e,writable:!1,enumerable:!1,configurable:!1},class_name:{value:e,writable:!1,enumerable:!1,configurable:!1},super_name:{value:d,writable:!1,enumerable:!1,configurable:!1},protocol_name:{value:b,writable:!1,enumerable:!1,configurable:!1},id:{value:s,writable:!1,enumerable:!1,configurable:!1},setStatic:{value:setStatic(h),writable:!1,enumerable:!1,configurable:!1},getStatic:{value:getStatic(h),writable:!1,enumerable:!1,configurable:!1},getConst:{value:getConst(y),writable:!1,enumerable:!1,configurable:!1},toString:{value:toClassString(s,e),writable:!1,enumerable:!1,configurable:!1},extendOf:{value:classOfExtend(c),writable:!1,enumerable:!1,configurable:!1},instanceOf:{value:classOfInstance(c),writable:!1,enumerable:!1,configurable:!1},protocolOf:{value:classOfProtocol(c),writable:!1,enumerable:!1,configurable:!1},new:{value:makeInstance(c),writable:!1,enumerable:!1,configurable:!1},renew:{value:remakeInstance(c),writable:!1,enumerable:!1,configurable:!1},kindClass:{value:!0,writable:!1,enumerable:!1,configurable:!1}},o[getRunEnvName()]={value:__get__(i),writable:!1,enumerable:!1,configurable:!1},Object.defineProperties(c,o),h.__proto__=c.__proto__,c.__proto__=freeze(Object.create(h,m)),c.prototype=u,Object.freeze(c)},checkProtocolType=e=>{let t=null;each(e,(e,n)=>{if(isEmpty(getDefaultVal(n,"type"))&&isEmpty(getDefaultVal(n,"model")))return t=e,!1});return t},validateProtocol=(e,t,n,r,a)=>{const o=/^[A-Z][A-Za-z0-9_]+$/g,i=/^[A-Z_$]+$/i,c=["$_construct","$_encoder","$_decoder","$toString"];let u=[],s=!1,l=!1,f="",p=!1,g=!1;e||exit(`没有给定接口名`);isString(e)||exit(`<${e}> 协议名称必须是string类型`);o.test(e)||exit(`<${e}> 协议命名定义不规范,必须是以大写字母开头`);if(t){isObject(t)||exit(`<${e}> 协议中“self”定义的结构体必须是[Object]类型`),isJson(t)||exit(`<${e}> 协议中“self”定义的结构体的格式必须是: {}`);const n=checkProtocolType(t);n&&exit(`<${e}> 协议中“self”定义的结构体的值类型不合法,类型必须是: ProtocolType -> ${n}`);const r=JSON.stringify(t).replace(/[\s+]/g,"").replace(/\{(.*)\}/g,"{}");if("{}"!==r&&exit(`<${e}> 协议中“self”定义的结构体不规范,格式必须是: {}`),each(t,function(e,t){if(c.indexOf(e)>-1)return f=e,l=!0,!1;if(KeyWord.indexOf(e)>-1)return f=e,s=!0,!1;if(hasFinalName(e)){let t=filterFinalName(e);if(u.indexOf(t)>-1)return f=t,p=!0,!1;u.push(t)}else if(u.indexOf(e)>-1)return f=e,p=!0,!1}),s)return exit(`<${e}> 协议中“self”定义的名称不可使用关键：${f}`),!1;if(l)return exit(`<${e}> 协议中“self”定义的“${f}”构造函数不允许设置为[Final]类型`),!1;if(p)return exit(`<${f}> 协议中“self”定义的名称已存在`),!1}if(r){isObject(r)||exit(`<${f}> 协议中“static”定义的结构体必须是[Object]类型`),isJson(r)||exit(`<${e}> 协议中“static”定义的结构体的格式必须是: {}`);const t=JSON.stringify(r).replace(/[\s+]/g,"").replace(/\{(.*)\}/g,"{}");"{}"!==t&&exit(`<${e}> 协议中“static”定义的结构体不规范,格式必须是: {}`);const n=checkProtocolType(r);n&&exit(`<${e}> 协议中“static”定义的结构体的值类型不合法,类型必须是: ProtocolType -> ${n}`)}if(n){isObject(n)||exit(`<${e}> 协议中“const”定义的结构体必须是[Object]类型`),isJson(n)||exit(`<${e}> 协议中“const”定义的结构体的格式必须是: {}`);const t=JSON.stringify(n).replace(/[\s+]/g,"").replace(/\{(.*)\}/g,"{}");"{}"!==t&&exit(`<${e}> 协议中“const”定义的结构体不规范,格式必须是: {}`);const r=checkProtocolType(n);if(r&&exit(`<${e}> 协议中“const”定义的结构体的值类型不合法,类型必须是ProtocolType -> ${r}`),each(n,function(e,t){return i.test(e)?KeyWord.indexOf(e)>-1?(f=e,s=!0,!1):void 0:(f=e,g=!0,!1)}),s)return exit(`<${e}> 协议中“const”定义的名称不可使用关键：${f}`),!1;g&&exit(`<${e}> 协议中“const”定义的名称必须全部以大写命名：${f}`)}isArray(a)&&each(a,function(t,n){(isEmpty(n.name)||isEmpty(n.id)||!hasProtocolId(n.id)||!hasRunEnvGetter(n)||isEmpty(getDataWithRunEnv(n,"key")))&&exit(`<${e}> 协议继承定义的结构体不规范: ${e}`),isFunction(n)||exit(`<${e}> 协议继承定义的结构体定义不规范,格式必须是: function(?,?){}`)});u=[];return!0},Protocol=function(e,t,n){let r={name:e,id:"",key:"",super_name:[],self:{},const:{},static:{},implement_list:{}},a=function(){},o={},i=generateProtocolId(),c=getDefaultVal(t,"self",{}),u=getDefaultVal(t,"const",{}),s=getDefaultVal(t,"static",{}),l=[];if(isEmpty(n)&&(n=[])||!isArray(n)&&(n=[n]),validateProtocol(e,c,u,s,n)){isEmpty(n)||reverseEach(n,function(e,t){const n=getDataWithRunEnv(t,"self"),r=getDataWithRunEnv(t,"const"),a=getDataWithRunEnv(t,"static"),o=getDataWithRunEnv(t,"super_name"),i=getDataWithRunEnv(t,"name"),f=getDataWithRunEnv(t,"id");each(n,function(e,t){!c[e]&&(c[e]=t)}),each(r,function(e,t){!u[e]&&(u[e]=t)}),each(a,function(e,t){!s[e]&&(s[e]=t)}),each(o,function(e,t){l.push(t)}),l.unshift({id:f,name:i})}),r.name=e,r.id=i,r.key=convertCode(i),r.self=c,r.const=u,r.static=s,r.super_name=l,r.implement_list={self:c,const:u,static:s};const t={self:c,const:u,static:s,name:e,id:i,super_name:l,protocol:function(){},_:{_:VHProtocol},console:Console},f="function (GV, _){GV.protocol = function "+e+"() {_._._(GV, this, arguments);};}";try{evil(f)(t,t)}catch(e){error(e)}return a=t.protocol,o={protocol_name:{value:e,writable:!1,enumerable:!1,configurable:!1},super_name:{value:l,writable:!1,enumerable:!1,configurable:!1},id:{value:i,writable:!1,enumerable:!1,configurable:!1},toString:{value:toProtocolString(i,e),writable:!1,enumerable:!1,configurable:!1},instanceOf:{value:protocolOfInstance(a),writable:!1,enumerable:!1,configurable:!1},extendOf:{value:extendOfProtocol(a),writable:!1,enumerable:!1,configurable:!1},kindProtocol:{value:!0,writable:!1,enumerable:!1,configurable:!1}},o[getRunEnvName()]={value:__get__(r),writable:!1,enumerable:!1,configurable:!1},Object.defineProperties(a,o),a.__proto__=Object.freeze({self:c,const:u,static:s}),Object.freeze(a)}},ProtocolTypeRule=function(e,t,n){return{type:e,args:n,mode:["@optional","@required"].indexOf(t)<0?"@required":t}},ProtocolType={function:function(){let e="",t=[];return each(arguments,(n,r)=>{0===r.indexOf("@")?e=r:t.push(r)}),Object.freeze(ProtocolTypeRule("function",e,t))},object:function(e){return Object.freeze(ProtocolTypeRule("object",e,""))},array:function(e){return Object.freeze(ProtocolTypeRule("array",e,""))},string:function(e){return Object.freeze(ProtocolTypeRule("string",e,""))},number:function(e){return Object.freeze(ProtocolTypeRule("number",e,""))},class:function(e,t){let n="",r="",a="";try{hasRunEnvGetter(t)&&(n=getDataWithRunEnv(t,"key"),r=getDataWithRunEnv(t,"id"),a=getDataWithRunEnv(t,"name"))}catch(e){}return hasClassId(r)&&checkClassLegal(a,n,r)||exit(`协议约定的类不合法: <${t}>`),Object.freeze(ProtocolTypeRule("class",e,formatCode([a,r])))},own:function(e){return Object.freeze(ProtocolTypeRule("own",e,""))}},DefClass=(e,t,n,r,a)=>Class(e,t,n,r,a),DefProtocol=(e,t,n)=>Protocol(e,t,n);exports.DefClass=DefClass,exports.DefProtocol=DefProtocol,exports.ProtocolType=ProtocolType;
